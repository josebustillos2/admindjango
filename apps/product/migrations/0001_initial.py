# Generated by Django 4.2.1 on 2024-01-13 05:28

import apps.utils
import apps.validator.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    apps.utils.UpperCharField(max_length=100, verbose_name="Nombre"),
                ),
                ("description", models.TextField(verbose_name="Descripción")),
            ],
            options={
                "verbose_name": "Categoría",
                "verbose_name_plural": "Categorías",
            },
        ),
        migrations.CreateModel(
            name="UnitSizeProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    apps.utils.UpperCharField(max_length=50, verbose_name="Nombre"),
                ),
            ],
            options={
                "verbose_name": "Unidad de Medida",
                "verbose_name_plural": "Ud. Medida",
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    apps.utils.UpperCharField(max_length=200, verbose_name="Nombre"),
                ),
                (
                    "ruc",
                    models.BigIntegerField(
                        unique=True,
                        validators=[apps.validator.utils.TypeDocument.valide_ruc],
                        verbose_name="RUC",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=200, verbose_name="Correo electrónico"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=200,
                        validators=[apps.validator.utils.NumberPhone.valide_cellphone],
                        verbose_name="Teléfono/Celular",
                    ),
                ),
                (
                    "address",
                    apps.utils.UpperCharField(
                        max_length=256, verbose_name="Dirección y número de casa"
                    ),
                ),
            ],
            options={
                "verbose_name": "Proveedor",
                "verbose_name_plural": "Proveedores",
                "unique_together": {("ruc",)},
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    apps.utils.UpperCharField(max_length=25, verbose_name="Código"),
                ),
                (
                    "provider_code",
                    apps.utils.UpperCharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Cód. Proveedor",
                    ),
                ),
                (
                    "name",
                    apps.utils.UpperCharField(max_length=128, verbose_name="Nombre"),
                ),
                ("cost", models.FloatField(default=0, verbose_name="Precio de costo")),
                ("price1", models.FloatField(verbose_name="Precio 1")),
                ("price2", models.FloatField(default=0, verbose_name="Precio 2")),
                ("price3", models.FloatField(default=0, verbose_name="Precio 3")),
                ("discount", models.FloatField(default=0, verbose_name="Descuentos")),
                ("stock", models.IntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.category",
                        verbose_name="Categoría",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.provider",
                        verbose_name="Proveedor",
                    ),
                ),
                (
                    "unit_size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.unitsizeproduct",
                        verbose_name="Unidad de Medida",
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto",
                "verbose_name_plural": "Productos",
                "unique_together": {("code", "provider_code")},
            },
        ),
    ]
